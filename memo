<!--コメントアウト--> <!-- C#の // -->


<!-- ページ全体のメインタイトル（1ページに1つが基本） -->
<h1>私のプログラミング学習記録</h1>
<!-- h1の中の大きな区切り（章タイトル）-->
<h2>HTML基礎</h2>
<!-- h2の中のさらに小さい区切り（節タイトル -->
<h3>見出しタグの使い方</h3>
<!-- h3の中でさらに細かい見出し -->
<h4>h1〜h6の使い分け</h4>
<!-- h5, h6はあまり使わない（重要度が低くなる -->
<h5>マイナーな見出し</h5>
<h6>最小の見出し</h6>　<!--最小-->

<!--確認用(サイズ)-->
<h1>abcd</h1>
<h2>abcd</h2> 
<h3>abcd</h3> 
<h4>abcd</h4>
<h5>abcd</h5>
<h6>abcd</h6> 

<!--Webページがどう動くか・どう表示されるかを決めるための設定や情報を入れる箱 -->
<head>
<!--
ブラウザや検索エンジンにページの情報を伝える
CSSやJavaScriptのファイルを読み込む場所
ここに書いた内容は、基本的にページには直接表示されない 例外が<title>
1ページに1つだけ使う 
-->
</head>



<!--　body:見える部分の箱のイメージ -->
<body>　
<!-- 
ラウザに表示される内容（文章、画像、リンク、ボタンなど）を入れる
ページの「骨組み（HTML）」の中で、<head>と並ぶ最上位要素の1つ
1ページに1つだけ使う 
-->
</body>

<!-- 例 head,body　-->
<!-- HTMLページの構造サンプル -->
<!--
<!DOCTYPE html>     ← ページがHTMLですよという宣言
<html>              ← ページ全体を囲むタグ（1つだけ）
  <head>            ← 見えない設定や情報（1つだけ）
    … ページ設定 …
  </head>
  <body>            ← 見える部分（1つだけ）
    … 表示する内容 …
  </body>
</html>
-->



<!-- lang 属性　言語-->
<html lang="ja"> <!-- 日本語ページ -->
<html lang="en"> <!-- 英語ページ -->
<html lang="fr"> <!-- フランス語ページ -->

<!--1ページの中で異なる言語を使うときは、その部分だけにlang-->
<p lang="en">Hello!</p>
<p lang="ja">こんにちは！</p>

<!-- 言語の混合する場合は、
基本にする言語を決め、その部分だけ <span lang="言語（英語ならen）"> で囲む
-->
<!-- 例　:これはpenです-->
<p>これは<span lang="en">pen</span>です。</p>



<!-- charset : 文字集合体の略で書き方は
<meta charset="UTF-8">

使う理由
ブラウザが文字を正しく表示するため
特に日本語や絵文字を使うときは必須
違う文字コードで保存してあるHTMLを開くと「文字化け」する
2025年、現在はデフォルトで使う

安全に使うコツ
HTMLを作るときはテンプレに最初から<meta charset="UTF-8">入れておく
<head>の最初に書く（1〜2行目くらい）

VS Codeやエディタの設定で保存時はUTF-8固定にする　　                          ←　ここのVS Codeはまだやってない。
-->



<!-- hesder =-->
<!--
ページやセクションの先頭部分を表す
タイトルやロゴ、メニュー、見出しなどを置くことが多い
ページ全体の先頭だけでなく、<article>や<section>の中にも使える
-->
<!-- 例　-->
<header>
  <h1>タイトル</h1>
  <nav> ... </nav>
</header>



<!--nav (ナビゲーション)-->
<!--
ページ内や外部への主要なリンク集
メニューや目次など、ユーザーが移動するための導線
-->
<!-- 例　-->
<nav>
  <ul>
    <li><a href="#">ホーム</a></li>
    <li><a href="#">記事一覧</a></li>
    <li><a href="#">お問い合わせ</a></li>
  </ul>
</nav>



<!-- article (アーティクル：記事) -->          　　　　　　　　  ← ← ← ← ←
<!--
それだけで独立して意味が成り立つコンテンツ
ブログ記事、ニュース記事、掲示板の投稿など
-->
<!-- 例1　-->
<article>
  <h2>今日の出来事</h2>
  <p>今日はHTMLの勉強をしました。</p>
</article>

<!--　例2 -->
<article>
  <h2>新型スマホが発表されました</h2>
  <p>メーカーAは本日、新型スマホBを発表しました。...</p>
</article>

<article>
  <h2>来週の天気予報</h2>
  <p>来週は全国的に晴れの日が続く見込みです。</p>
</article>



<!--section（区切り） -->
<!--
ページや記事内の意味的なまとまり
見出しをつけてテーマごとにまとめるときに使う
独立性はないが、内容をグループ化するのに便利
-->
<!-- 例　-->
<section>
  <h3>学習</h3>
  <p>プログラミンを勉強</p>
</section>



<!-- aside（補足情報） -->
<!--
メインの内容に対する補足や関連情報
サイドバー、広告、注釈など
メイン本文とは別枠で扱われ
-->
<!-- 例　-->
<aside>
  <h4>豆知識</h4>
  <p>HTMLはHyperText Markup Languageの略です。</p>
</aside>



<!-- footer -->
ページやセクションの末尾部分
著作権表示、連絡先、関連リンクなど
ページ全体にも、<article>や<section>内にも置ける

<!-- 例　-->
<footer>
  <p>© 2025 paiza</p>
</footer>


<!-- 構造まとめ　-->
<header>        ← ページの先頭部分（タイトル・メニューなど）
  <nav>         ← ナビゲーションリンク
  </nav>
</header>

<main>
  <article>     ← 独立した記事
    <section>   ← 記事の一部
    </section>
    <aside>     ← 補足情報
    </aside>

  </article>
</main>

<footer>        ← ページの末尾（著作権や連絡先）
</footer>



<!-- hr　　水平線（horizontal rule） -->
<body>
    <p>こんにちは、霧島京子です。</p>
    <hr><!-->----------------------------- -->
    <p>これからよろしくお願いします。</p>
</body>


<!-- ul（unordered list） -->
<!--
順序なしリスト
項目の順番に意味がないときに使います。
デフォルトでは 黒丸（●） で表示されます。
-->
<ul>
    <li>リンゴ</li>
    <li>バナナ</li>
    <li>オレンジ</li>
</ul>
表示イメージ：
・リンゴ
・バナナ
・オレンジ


<!-- ol（ordered list） -->
<!--
順序つきリスト
項目の順番に意味があるときに使います（ランキング、手順など）。
デフォルトでは 数字付き で表示されます。
-->
<ol>
    <li>起きる</li>
    <li>顔を洗う</li>
    <li>朝ごはんを食べる</li>
</ol>

表示イメージ：
1.起きる
2.顔を洗う
3.朝ごはんを食べる



<!-- li（list item） -->
<!--
リストの各項目を表すタグ。
<ul> や <ol> の中で使われます。
単独で使うのではなく、必ず <ul> または <ol> の中に置きます。
-->

<!-- まとめ図
要素	意味	用途例
<ul>	順序なしリスト	メニュー、持ち物リスト
<ol>	順序ありリスト	手順、ランキング
<li>	各リスト項目	リストの中身
-->

<!-- イメージ　-->
<h2>今日やること</h2>
<ol>
    <li>買い物に行く</li>
    <li>夕飯を作る
        <ul>
            <li>カレー</li>
            <li>サラダ</li>
        </ul>
    </li>
    <li>読書する</li>
</ol>
